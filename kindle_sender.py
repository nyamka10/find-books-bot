#!/usr/bin/env python3
"""
–ú–æ–¥—É–ª—å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–Ω–∏–≥ –Ω–∞ Kindle –ø–æ email
"""

import smtplib
import os
from email.mime.multipart import MIMEMultipart
from email.mime.base import MIMEBase
from email.mime.text import MIMEText
from email.mime.application import MIMEApplication
from email import encoders
from typing import Optional
from dotenv import load_dotenv

load_dotenv()


class KindleSender:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–Ω–∏–≥–∏ –Ω–∞ Kindle –ø–æ email"""
    
    def __init__(self):
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ SMTP (Gmail)
        self.smtp_server = "smtp.gmail.com"
        self.port = 465  # SSL
        self.login = os.getenv('GMAIL_LOGIN')
        self.password = os.getenv('GMAIL_PASSWORD')
        
        # Email –¥–ª—è Kindle (–∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è)
        self.kindle_email = os.getenv('KINDLE_EMAIL')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        if not self.login or not self.password:
            raise ValueError("–ù–µ —É–∫–∞–∑–∞–Ω—ã —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ Gmail –≤ .env —Ñ–∞–π–ª–µ")
        if not self.kindle_email:
            raise ValueError("–ù–µ —É–∫–∞–∑–∞–Ω email –¥–ª—è Kindle –≤ .env —Ñ–∞–π–ª–µ")
    
    def send_book_to_kindle(self, book_content: bytes, book_title: str, author: str = None, user_kindle_email: str = None) -> bool:
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–Ω–∏–≥—É –Ω–∞ Kindle"""
        try:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω, –∏–Ω–∞—á–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π
            target_email = user_kindle_email if user_kindle_email else self.kindle_email
            print(f"üìß –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–Ω–∏–≥–∏ '{book_title}' –Ω–∞ Kindle...")
            print(f"üìß Email –ø–æ–ª—É—á–∞—Ç–µ–ª—è: {target_email}")
            
            # –°–æ–∑–¥–∞–µ–º –ø–∏—Å—å–º–æ
            msg = MIMEMultipart()
            msg["Subject"] = f"–ö–Ω–∏–≥–∞: {book_title}"
            msg["From"] = self.login
            msg["To"] = target_email
            
            # –û—á–∏—â–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            clean_title = book_title.replace('"', '').replace("'", "").strip()
            
            # –¢–µ–∫—Å—Ç –ø–∏—Å—å–º–∞
            body = f"""
            –ü—Ä–∏–≤–µ—Ç! 
            
            –û—Ç–ø—Ä–∞–≤–ª—è—é –∫–Ω–∏–≥—É: {clean_title}
            """
            if author:
                body += f"–ê–≤—Ç–æ—Ä: {author}\n"
            
            body += "\n–ö–Ω–∏–≥–∞ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∞ –∫ –ø–∏—Å—å–º—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ EPUB."
            
            msg.attach(MIMEText(body, "plain", "utf-8"))
            
            # –ò–º—è —Ñ–∞–π–ª–∞ - –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π
            safe_title = self._sanitize_filename(book_title)
            filename = f"{safe_title}.epub"
            
            # –ü—Ä–∏–∫—Ä–µ–ø–ª—è–µ–º —Ñ–∞–π–ª –∫–Ω–∏–≥–∏
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º MIMEApplication –¥–ª—è –ª—É—á—à–µ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
            attachment = MIMEApplication(book_content, _subtype='epub')
            attachment.add_header('Content-Disposition', 'attachment', filename=filename)
            
            # –û—Ç–ª–∞–¥–∫–∞ (—Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
            # print(f"üìÅ –ò–º—è —Ñ–∞–π–ª–∞: {filename}")
            
            # –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
            print(f"üîç –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:")
            print(f"   üìÅ –ò–º—è —Ñ–∞–π–ª–∞: {filename}")
            print(f"   üìß Content-Disposition: attachment; filename=\"{filename}\"")
            
            msg.attach(attachment)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∏—Å—å–º–æ
            with smtplib.SMTP_SSL(self.smtp_server, self.port) as server:
                server.login(self.login, self.password)
                server.sendmail(msg["From"], [target_email], msg.as_string())
            
            print(f"‚úÖ –ö–Ω–∏–≥–∞ '{book_title}' —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ Kindle!")
            print(f"üìß Email: {target_email}")
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞ Kindle: {e}")
            return False
    
    def _sanitize_filename(self, filename: str) -> str:
        """–û—á–∏—â–∞–µ—Ç –∏–º—è —Ñ–∞–π–ª–∞ –æ—Ç –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤"""
        import re
        
        # –£–±–∏—Ä–∞–µ–º –∫–∞–≤—ã—á–∫–∏ –∏ –ª–∏—à–Ω–∏–µ —Å–∏–º–≤–æ–ª—ã
        filename = re.sub(r'["\']', '', filename)
        
        # –ó–∞–º–µ–Ω—è–µ–º –ø—Ä–æ–±–µ–ª—ã –Ω–∞ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è
        filename = filename.replace(' ', '_')
        
        # –£–±–∏—Ä–∞–µ–º –≤—Å–µ —Å–∏–º–≤–æ–ª—ã –∫—Ä–æ–º–µ –±—É–∫–≤, —Ü–∏—Ñ—Ä, –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–π –∏ –¥–µ—Ñ–∏—Å–æ–≤
        filename = re.sub(r'[^\w\-_]', '', filename)
        
        # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
        if len(filename) > 50:
            filename = filename[:50]
        
        # –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è
        filename = re.sub(r'_+', '_', filename)
        filename = filename.strip('_')
        
        # –ï—Å–ª–∏ –∏–º—è —Ñ–∞–π–ª–∞ –ø—É—Å—Ç–æ–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback
        if not filename:
            filename = "book"
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - –µ—Å–ª–∏ –∏–º—è —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ-ASCII —Å–∏–º–≤–æ–ª—ã, —Ç—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∏—Ä—É–µ–º
        try:
            filename.encode('ascii')
        except UnicodeEncodeError:
            # –¢—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ü–∏—è —Ä—É—Å—Å–∫–∏—Ö –±—É–∫–≤
            translit_map = {
                '–∞': 'a', '–±': 'b', '–≤': 'v', '–≥': 'g', '–¥': 'd', '–µ': 'e', '—ë': 'e',
                '–∂': 'zh', '–∑': 'z', '–∏': 'i', '–π': 'y', '–∫': 'k', '–ª': 'l', '–º': 'm',
                '–Ω': 'n', '–æ': 'o', '–ø': 'p', '—Ä': 'r', '—Å': 's', '—Ç': 't', '—É': 'u',
                '—Ñ': 'f', '—Ö': 'h', '—Ü': 'ts', '—á': 'ch', '—à': 'sh', '—â': 'sch',
                '—ä': '', '—ã': 'y', '—å': '', '—ç': 'e', '—é': 'yu', '—è': 'ya'
            }
            
            for cyr, lat in translit_map.items():
                filename = filename.replace(cyr, lat)
                filename = filename.replace(cyr.upper(), lat.upper())
        
        return filename
    
    def test_connection(self) -> bool:
        """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ SMTP —Å–µ—Ä–≤–µ—Ä—É"""
        try:
            print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Gmail...")
            with smtplib.SMTP_SSL(self.smtp_server, self.port) as server:
                server.login(self.login, self.password)
            print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Gmail —É—Å–ø–µ—à–Ω–æ!")
            return True
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Gmail: {e}")
            return False


async def send_book_to_kindle_async(book_content: bytes, book_title: str, author: str = None, user_kindle_email: str = None) -> bool:
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ–±–µ—Ä—Ç–∫–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–Ω–∏–≥–∏ –Ω–∞ Kindle"""
    import asyncio
    
    def _send():
        sender = KindleSender()
        return sender.send_book_to_kindle(book_content, book_title, author, user_kindle_email)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ, —á—Ç–æ–±—ã –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å asyncio
    loop = asyncio.get_event_loop()
    return await loop.run_in_executor(None, _send)
